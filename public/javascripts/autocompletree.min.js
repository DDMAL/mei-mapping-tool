/* AutoCompleTree - Author: Burak Kaya (https://github.com/yesilfasulye) - License: MIT */
!function(){var e=function(s,n){var o=this;if(e.id=(e.id||0)+1,o.id=e.id,o.input=s,o.isOpened=!1,o.selected=[],o.suggestions=[],o.selectedIndex=0,o.options={classPrefix:"o-autocompletree",noResult:"No suggestions found!",notSelected:"No items selected!"},n){if("object"!=typeof n||Array.isArray(n))return void console.error('ERRR! Data type must be object, please check data type for: "#'+s.id+'"');for(var a in o.data=n,n)(n[a]||"object"==typeof n[a])&&o.suggestions.push(a)}o.dom={container:null,list:null,tags:null},o.input.classList.add(o.options.classPrefix+"__input"),o.input.setAttribute("autocomplete","off");var l=i("div",{className:o.options.classPrefix+"__form",around:o.input});o.dom.list=i("div",{className:o.options.classPrefix+"__suggestion-list",after:o.input}),o.dom.container=i("div",{id:o.options.classPrefix+"-"+o.id,className:o.options.classPrefix+" "+o.options.classPrefix+"__container",around:l}),o.dom.tags=i("ul",{className:o.options.classPrefix+"__tag-list",before:l}),o.events={input:{focus:function(){o.show()},keydown:function(){var e,t=event.keyCode||event.charCode;8===t&&(o.input.value.length<=0&&o.selected.length>0?(e=o.selected.length-1,o.dom.tags.childNodes[e].classList.contains(o.options.classPrefix+"__tag--selected")?(o.dom.tags.childNodes[e].remove(),o.selected.splice(e,1),o.setSuggestions(),o.show()):(o.dom.tags.childNodes[e].classList.add(o.options.classPrefix+"__tag--selected"),o.hide())):(o.setSuggestions(),o.show())),9===t&&o.dom.tags.childNodes.length>0&&(e=o.dom.tags.childNodes.length-1,o.dom.tags.childNodes[e].classList.contains(o.options.classPrefix+"__tag--selected")&&(event.preventDefault(),o.dom.tags.childNodes[e].classList.remove(o.options.classPrefix+"__tag--selected"),o.setSuggestions(),o.input.focus(),o.show())),o.isOpened&&(27===t&&(o.hide(),o.input.blur()),13===t&&(o.selectItemAtIndex(o.selectedIndex),o.show()),38!==t&&40!==t||o.setItem(t,o.dom.list))},keyup:function(){var e=event.keyCode||event.charCode;[9,27,13,38,40].includes(e)||""==this.input.value||o.filter()}},list:{click:function(){o.select()}},container:{click:function(){o.input.focus()}}},t(o.input,o.events.input),t(o.dom.list,o.events.list),t(o.dom.container,o.events.container),e.all.push(o)};function t(e,t){if(e)for(var s in t){var i=t[s];s.split(/\s+/).forEach(function(t){e.addEventListener(t,i)})}}function s(e,t){if(e)for(var s in t){var i=t[s];s.split(/\s+/).forEach(function(t){e.removeEventListener(t,i)})}}function i(e,t){var s=document.createElement(e);for(var i in t)t.hasOwnProperty(i)&&("append"===i?t[i].appendChild(s):"after"===i?t[i].parentNode.insertBefore(s,t[i].nextSibling):"before"===i?t[i].parentNode.insertBefore(s,t[i]):"around"===i?(t[i].parentNode.insertBefore(s,t[i]),s.appendChild(t[i])):i in s?s[i]=t[i]:s.setAttribute(i,t[i]));return s}function n(t,s){let i=new XMLHttpRequest;i.overrideMimeType("application/json"),i.open("GET",s,!0),i.onreadystatechange=function(){if(4===i.readyState){if(200===i.status){let s=JSON.parse(i.responseText);new e(t,s)}if(404===i.status)return void console.error('ERRR! Please check JSON data path for: "#'+t.id+'"')}},i.send()}function o(){var e=document.querySelectorAll("input[data-autocompletree]");for(const t of e)n(t,t.dataset.path)}e.prototype={hide:function(){this.isOpened=!1,this.dom.list.style.display="none"},show:function(){this.isOpened||(this.dom.list.innerHTML="",this.generateList()&&(this.isOpened=!0,this.dom.list.style.display="block"))},getData:function(){return this.selected.join(".")},getSelectedList:function(){return this.selected.length>0?this.selected:this.options.notSelected},getLastSelected:function(){return this.selected.length>0?this.selected[this.selected.length-1]:this.options.notSelected},getSuggestions:function(){return this.suggestions.length>0?this.suggestions:this.options.noResult},destroy:function(){if(s(this.input,this.events.input),s(this.dom.list,this.events.list),s(this.dom.container,this.events.container),this.input.classList.remove(this.options.classPrefix+"__input"),this.input.removeAttribute("autocomplete"),this.dom.container){var t=this.dom.container.parentNode;t.insertBefore(this.input,this.dom.container),t.removeChild(this.dom.container)}var i=e.all.indexOf(this);-1!==i&&e.all.splice(i,1)},setSuggestions:function(){this.suggestions=[];var e,t,s=""!=this.getData()?(e=this.getData(),t=this.data,e.split(".").reduce(function(e,t){return e?e=e[t]:void 0},t)):this.data;for(var i in s)(s[i]||"object"==typeof s[i])&&this.suggestions.push(i.toString())},select:function(){event.preventDefault(),event.target.className==this.options.classPrefix+"__suggestion"&&(this.hide(),i("li",{className:this.options.classPrefix+"__tag",innerHTML:event.target.text,append:this.dom.tags}),this.selected.push(event.target.text),this.setSuggestions(),this.input.value="")},selectItemAtIndex:function(e){this.dom.list.childNodes[e].click()},setItem:function(e,t){var s=function(e){for(var t=0;t<e.childNodes.length;t++)if("true"==e.childNodes[t].getAttribute("aria-selected"))return t}(t);this.dom.list.childNodes[s].setAttribute("aria-selected",!1),38===e&&s>0?s--:40===e&&s<this.dom.list.childNodes.length-1?s++:s=0,this.selectedIndex=s,this.dom.list.childNodes[s].setAttribute("aria-selected",!0)},generateList:function(e){if(this.dom.list.innerHTML="",null==e&&(e=this.suggestions),e.length<=0)return!1;for(var t=0;t<e.length;t++)i("a",{className:this.options.classPrefix+"__suggestion",href:"#",innerHTML:e[t],append:this.dom.list,"aria-selected":"false"});return this.dom.list.firstChild.setAttribute("aria-selected",!0),this.selectedIndex=0,!0},filter:function(){var e=this.input.value,t=[];(t=""!=e?this.suggestions.filter(function(t){return RegExp("^"+e.replace(/[-\\^$*+?.()|[\]{}]/g,"\\$&"),"i").test(t)}):this.suggestions).length>0?this.generateList(t):""==this.dom.list.innerHTML&&(i("span",{className:this.options.classPrefix+"__no-suggestion",innerHTML:this.options.noResult,append:this.dom.list}),this.isOpened=!0,this.dom.list.style.display="block")}},e.all=[],e.version="1.0.0","undefined"!=typeof self&&(self.AutoCompleTree=e),"undefined"!=typeof Document&&("loading"!==document.readyState?o():document.addEventListener("DOMContentLoaded",o))}();